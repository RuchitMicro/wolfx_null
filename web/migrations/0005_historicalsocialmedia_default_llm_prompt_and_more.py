# Generated by Django 4.2.7 on 2025-04-03 11:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('web', '0004_alter_historicalvideoscriptgeneration_content_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='historicalsocialmedia',
            name='default_llm_prompt',
            field=models.TextField(blank=True, help_text='Default prompt for LLM to auto generate content specific to this account.', null=True),
        ),
        migrations.AddField(
            model_name='socialmedia',
            name='default_llm_prompt',
            field=models.TextField(blank=True, help_text='Default prompt for LLM to auto generate content specific to this account.', null=True),
        ),
        migrations.AlterField(
            model_name='historicalvideoscriptgeneration',
            name='content',
            field=models.TextField(blank=True, help_text='Detailed content from the source', null=True),
        ),
        migrations.AlterField(
            model_name='historicalvideoscriptgeneration',
            name='llm_prompt',
            field=models.TextField(blank=True, default='write a 60-second viral video script about this topic , keep the tone Conversational, direct, and provocative. I want the script to be natural, Speak like a person, not a narrator. Infuse curiosity, skepticism, and boldness. Challenge authority where relevant. Avoid complex jargon—keep it simple and sharp. Keep the script short, use punchy sentences to build energy. Break rhythm with longer lines when explaining complex ideas. Insert pauses with dashes or ellipses for dramatic effect. Aim for a natural, spoken-word cadence. For the title of the script I need A bold, intriguing headline that instantly conveys the topic or controversy it Must feel urgent or provocative to spark curiosity. Example: "The $LIBRA Scandal: Argentina\'s Presidential Crypto Catastrophe" For the opening hook I need 5 seconds of script that should Start with a provocative, emotionally charged line. Leverage curiosity, controversy, or shock value. Use cultural or financial buzzwords like "classic crypto pump-and-dump". Example: "Argentina\'s president is facing impeachment calls... after what looks like a classic crypto pump-and-dump." The main body of our script needs to Use the \'THEREFORE, BUT\' framework where we should have context , conflict, insight. Context should Set the stage with familiar, relatable information. Conflict should Introduce an unexpected twist or challenge. Insight should Deliver a compelling explanation or key insight. Maintain a natural, conversational tone. Vary sentence length to create rhythm. Include 3-4 compelling facts or figures. Facts should spark surprise, disbelief, or curiosity. Example: 40,000 investors believed in $LIBRA. The token crashed within days, wiping out millions. Now, impeachment calls are flooding in. Conclude with a powerful, thought-provoking statement. Use language that evokes emotion and leaves viewers pondering the broader implications. Example: "The $LIBRA crash isn’t just Argentina’s problem—it’s a global warning. When hype replaces due diligence, the public pays the price." Include a call to action but Avoid generic commands like "Follow us". Instead, leave viewers with a warning, insight, or challenge. Example: "The future of real estate is fractional, digital, and accessible. Join the movement. Take back the market.". \n        Please avoid using structural labels such as \'HOOK,\' \'OPENING,\' \'INTRO,\' or phrases like \'here\'s the lowdown\' or \'here\'s the kicker\' in the script. I want the entire script to read as a natural, flowing narrative—just like a clean news article or social media caption. No need to call out sections. Just give me the finished script in paragraph form, maintaining a strong tone, engaging style, and clear storytelling without introducing each part.\n        Directly give me the script and do not include any explanation , we need to just have the script. do not bifurcate the sections of the script your output should be a huge paragraph of script', help_text='Prompt for the LLM to generate a video script', null=True),
        ),
        migrations.AlterField(
            model_name='videoscriptgeneration',
            name='content',
            field=models.TextField(blank=True, help_text='Detailed content from the source', null=True),
        ),
        migrations.AlterField(
            model_name='videoscriptgeneration',
            name='llm_prompt',
            field=models.TextField(blank=True, default='write a 60-second viral video script about this topic , keep the tone Conversational, direct, and provocative. I want the script to be natural, Speak like a person, not a narrator. Infuse curiosity, skepticism, and boldness. Challenge authority where relevant. Avoid complex jargon—keep it simple and sharp. Keep the script short, use punchy sentences to build energy. Break rhythm with longer lines when explaining complex ideas. Insert pauses with dashes or ellipses for dramatic effect. Aim for a natural, spoken-word cadence. For the title of the script I need A bold, intriguing headline that instantly conveys the topic or controversy it Must feel urgent or provocative to spark curiosity. Example: "The $LIBRA Scandal: Argentina\'s Presidential Crypto Catastrophe" For the opening hook I need 5 seconds of script that should Start with a provocative, emotionally charged line. Leverage curiosity, controversy, or shock value. Use cultural or financial buzzwords like "classic crypto pump-and-dump". Example: "Argentina\'s president is facing impeachment calls... after what looks like a classic crypto pump-and-dump." The main body of our script needs to Use the \'THEREFORE, BUT\' framework where we should have context , conflict, insight. Context should Set the stage with familiar, relatable information. Conflict should Introduce an unexpected twist or challenge. Insight should Deliver a compelling explanation or key insight. Maintain a natural, conversational tone. Vary sentence length to create rhythm. Include 3-4 compelling facts or figures. Facts should spark surprise, disbelief, or curiosity. Example: 40,000 investors believed in $LIBRA. The token crashed within days, wiping out millions. Now, impeachment calls are flooding in. Conclude with a powerful, thought-provoking statement. Use language that evokes emotion and leaves viewers pondering the broader implications. Example: "The $LIBRA crash isn’t just Argentina’s problem—it’s a global warning. When hype replaces due diligence, the public pays the price." Include a call to action but Avoid generic commands like "Follow us". Instead, leave viewers with a warning, insight, or challenge. Example: "The future of real estate is fractional, digital, and accessible. Join the movement. Take back the market.". \n        Please avoid using structural labels such as \'HOOK,\' \'OPENING,\' \'INTRO,\' or phrases like \'here\'s the lowdown\' or \'here\'s the kicker\' in the script. I want the entire script to read as a natural, flowing narrative—just like a clean news article or social media caption. No need to call out sections. Just give me the finished script in paragraph form, maintaining a strong tone, engaging style, and clear storytelling without introducing each part.\n        Directly give me the script and do not include any explanation , we need to just have the script. do not bifurcate the sections of the script your output should be a huge paragraph of script', help_text='Prompt for the LLM to generate a video script', null=True),
        ),
        migrations.CreateModel(
            name='HistoricalSocialMediaTimetable',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], help_text='Day of week when the post should be published')),
                ('posting_time', models.TimeField(help_text='Time of day when the post should be published')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('social_media', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='web.socialmedia')),
            ],
            options={
                'verbose_name': 'historical social media timetable',
                'verbose_name_plural': 'historical social media timetables',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SocialMediaTimetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_params', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=300, null=True)),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], help_text='Day of week when the post should be published')),
                ('posting_time', models.TimeField(help_text='Time of day when the post should be published')),
                ('social_media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetables', to='web.socialmedia')),
            ],
            options={
                'unique_together': {('social_media', 'day_of_week', 'posting_time')},
            },
        ),
    ]
